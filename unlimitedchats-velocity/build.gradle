plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id ("maven-publish")
}

group = 'dev.waterchick'
version = rootProject.findProperty("versionName") ?: "default-version"


repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {url = uri("https://jitpack.io")}
}

dependencies {
    compileOnly "com.velocitypowered:velocity-api:3.3.0-SNAPSHOT"
    compileOnly ("com.github.WaterChick:configwrapper:v1.0.0")
    implementation project(path: ':unlimitedchats-core')
    annotationProcessor("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact tasks.named('shadowJar').get() // Používáme shadowJar jako artefakt
        }
    }

    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/WaterChick/unlimitedchats') // Změň na skutečnou URL repozitáře
            credentials {
                username = System.getenv('USERNAME') // Automaticky se nastaví při běhu workflow
                password = System.getenv('TOKEN') // Automaticky se nastaví při běhu workflow
            }
        }
    }
}

shadowJar {
    archiveBaseName.set('unlimitedchats-velocity')
    archiveClassifier.set('')
    archiveVersion.set(version.toString()) // nastavte verzi podle potřeby
}


